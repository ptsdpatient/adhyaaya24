{
  "version": 3,
  "sources": ["../../svelte-modals/dist/store.js", "../../svelte-modals/dist/Modals.svelte"],
  "sourcesContent": ["import { get, writable } from 'svelte/store';\r\nexport const exitBeforeEnter = writable(false);\r\n/**\r\n * The transition state of the modals\r\n */\r\nexport const transitioning = writable(null);\r\n/**\r\n * A Svelte store containing the current modal stack\r\n */\r\nexport const modals = writable([]);\r\n/**\r\n * A Svelte store describing how the current modal came to be active (\"push\" or \"pop\").\r\n * This can be useful for transitions if they should animate differently based on the action.\r\n */\r\nexport const action = writable(null);\r\n/**\r\n * Closes all modals in the stack.\r\n *\r\n * If closing was prevented by the current modal, it returns false\r\n */\r\nexport function closeAllModals() {\r\n    const modalsLength = get(modals).length;\r\n    const currentModal = get(modals)[modalsLength - 1];\r\n    if (currentModal?.callbacks?.onBeforeClose) {\r\n        if (currentModal?.callbacks?.onBeforeClose() === false) {\r\n            return false;\r\n        }\r\n    }\r\n    modals.set([]);\r\n    return true;\r\n}\r\n/**\r\n * Closes the last `amount` of modals in the stack\r\n *\r\n * If closing was prevented by the current modal, it returns false\r\n */\r\nexport function closeModals(amount = 1) {\r\n    const modalsLength = get(modals).length;\r\n    const currentModal = get(modals)[modalsLength - 1];\r\n    if (get(transitioning)) {\r\n        return false;\r\n    }\r\n    if (currentModal?.callbacks?.onBeforeClose) {\r\n        if (currentModal?.callbacks?.onBeforeClose() === false) {\r\n            return false;\r\n        }\r\n    }\r\n    if (get(exitBeforeEnter) && modalsLength > 0) {\r\n        transitioning.set(true);\r\n    }\r\n    exitBeforeEnter.set(false);\r\n    action.set('pop');\r\n    pop(amount);\r\n    return true;\r\n}\r\n/**\r\n * Closes the current modal component\r\n *\r\n * If closing was prevented by the current modal, it returns false\r\n */\r\nexport function closeModal() {\r\n    return closeModals(1);\r\n}\r\n/**\r\n * Opens a new modal\r\n */\r\nexport function openModal(component, props, options) {\r\n    if (get(transitioning)) {\r\n        return;\r\n    }\r\n    action.set('push');\r\n    if (get(exitBeforeEnter) && get(modals).length) {\r\n        transitioning.set(true);\r\n    }\r\n    exitBeforeEnter.set(false);\r\n    if (options?.replace) {\r\n        modals.update((prev) => [...prev.slice(0, prev.length - 1), { component, props }]);\r\n    }\r\n    else {\r\n        modals.update((prev) => [...prev, { component, props }]);\r\n    }\r\n}\r\n/**\r\n * Return false to prevent the current modal from being closed\r\n */\r\nexport function onBeforeClose(callback) {\r\n    modals.update((prev) => {\r\n        const modal = prev[prev.length - 1];\r\n        modal.callbacks = {\r\n            ...modal.callbacks,\r\n            onBeforeClose: callback\r\n        };\r\n        return prev;\r\n    });\r\n}\r\nfunction pop(amount = 1) {\r\n    modals.update((prev) => prev.slice(0, Math.max(0, prev.length - amount)));\r\n}\r\n", null],
  "mappings": "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",
  "names": ["ctx"]
}
