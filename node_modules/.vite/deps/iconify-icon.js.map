{
  "version": 3,
  "sources": ["../../iconify-icon/dist/iconify-icon.mjs"],
  "sourcesContent": ["/**\r\n* (c) Iconify\r\n*\r\n* For the full copyright and license information, please view the license.txt\r\n* files at https://github.com/iconify/iconify\r\n*\r\n* Licensed under MIT.\r\n*\r\n* @license MIT\r\n* @version 1.0.8\r\n*/\r\nconst defaultIconDimensions = Object.freeze(\r\n  {\r\n    left: 0,\r\n    top: 0,\r\n    width: 16,\r\n    height: 16\r\n  }\r\n);\r\nconst defaultIconTransformations = Object.freeze({\r\n  rotate: 0,\r\n  vFlip: false,\r\n  hFlip: false\r\n});\r\nconst defaultIconProps = Object.freeze({\r\n  ...defaultIconDimensions,\r\n  ...defaultIconTransformations\r\n});\r\nconst defaultExtendedIconProps = Object.freeze({\r\n  ...defaultIconProps,\r\n  body: \"\",\r\n  hidden: false\r\n});\r\n\r\nconst defaultIconSizeCustomisations = Object.freeze({\r\n  width: null,\r\n  height: null\r\n});\r\nconst defaultIconCustomisations = Object.freeze({\r\n  // Dimensions\r\n  ...defaultIconSizeCustomisations,\r\n  // Transformations\r\n  ...defaultIconTransformations\r\n});\r\n\r\nfunction rotateFromString(value, defaultValue = 0) {\r\n  const units = value.replace(/^-?[0-9.]*/, \"\");\r\n  function cleanup(value2) {\r\n    while (value2 < 0) {\r\n      value2 += 4;\r\n    }\r\n    return value2 % 4;\r\n  }\r\n  if (units === \"\") {\r\n    const num = parseInt(value);\r\n    return isNaN(num) ? 0 : cleanup(num);\r\n  } else if (units !== value) {\r\n    let split = 0;\r\n    switch (units) {\r\n      case \"%\":\r\n        split = 25;\r\n        break;\r\n      case \"deg\":\r\n        split = 90;\r\n    }\r\n    if (split) {\r\n      let num = parseFloat(value.slice(0, value.length - units.length));\r\n      if (isNaN(num)) {\r\n        return 0;\r\n      }\r\n      num = num / split;\r\n      return num % 1 === 0 ? cleanup(num) : 0;\r\n    }\r\n  }\r\n  return defaultValue;\r\n}\r\n\r\nconst separator = /[\\s,]+/;\r\nfunction flipFromString(custom, flip) {\r\n  flip.split(separator).forEach((str) => {\r\n    const value = str.trim();\r\n    switch (value) {\r\n      case \"horizontal\":\r\n        custom.hFlip = true;\r\n        break;\r\n      case \"vertical\":\r\n        custom.vFlip = true;\r\n        break;\r\n    }\r\n  });\r\n}\r\n\r\nconst defaultCustomisations = {\r\n    ...defaultIconCustomisations,\r\n    preserveAspectRatio: '',\r\n};\r\n/**\r\n * Get customisations\r\n */\r\nfunction getCustomisations(node) {\r\n    const customisations = {\r\n        ...defaultCustomisations,\r\n    };\r\n    const attr = (key, def) => node.getAttribute(key) || def;\r\n    // Dimensions\r\n    customisations.width = attr('width', null);\r\n    customisations.height = attr('height', null);\r\n    // Rotation\r\n    customisations.rotate = rotateFromString(attr('rotate', ''));\r\n    // Flip\r\n    flipFromString(customisations, attr('flip', ''));\r\n    // SVG attributes\r\n    customisations.preserveAspectRatio = attr('preserveAspectRatio', attr('preserveaspectratio', ''));\r\n    return customisations;\r\n}\r\n/**\r\n * Check if customisations have been updated\r\n */\r\nfunction haveCustomisationsChanged(value1, value2) {\r\n    for (const key in defaultCustomisations) {\r\n        if (value1[key] !== value2[key]) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\r\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\r\n  const colonSeparated = value.split(\":\");\r\n  if (value.slice(0, 1) === \"@\") {\r\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\r\n      return null;\r\n    }\r\n    provider = colonSeparated.shift().slice(1);\r\n  }\r\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\r\n    return null;\r\n  }\r\n  if (colonSeparated.length > 1) {\r\n    const name2 = colonSeparated.pop();\r\n    const prefix = colonSeparated.pop();\r\n    const result = {\r\n      // Allow provider without '@': \"provider:prefix:name\"\r\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\r\n      prefix,\r\n      name: name2\r\n    };\r\n    return validate && !validateIconName(result) ? null : result;\r\n  }\r\n  const name = colonSeparated[0];\r\n  const dashSeparated = name.split(\"-\");\r\n  if (dashSeparated.length > 1) {\r\n    const result = {\r\n      provider,\r\n      prefix: dashSeparated.shift(),\r\n      name: dashSeparated.join(\"-\")\r\n    };\r\n    return validate && !validateIconName(result) ? null : result;\r\n  }\r\n  if (allowSimpleName && provider === \"\") {\r\n    const result = {\r\n      provider,\r\n      prefix: \"\",\r\n      name\r\n    };\r\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\r\n  }\r\n  return null;\r\n};\r\nconst validateIconName = (icon, allowSimpleName) => {\r\n  if (!icon) {\r\n    return false;\r\n  }\r\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\r\n};\r\n\r\nfunction mergeIconTransformations(obj1, obj2) {\r\n  const result = {};\r\n  if (!obj1.hFlip !== !obj2.hFlip) {\r\n    result.hFlip = true;\r\n  }\r\n  if (!obj1.vFlip !== !obj2.vFlip) {\r\n    result.vFlip = true;\r\n  }\r\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\r\n  if (rotate) {\r\n    result.rotate = rotate;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction mergeIconData(parent, child) {\r\n  const result = mergeIconTransformations(parent, child);\r\n  for (const key in defaultExtendedIconProps) {\r\n    if (key in defaultIconTransformations) {\r\n      if (key in parent && !(key in result)) {\r\n        result[key] = defaultIconTransformations[key];\r\n      }\r\n    } else if (key in child) {\r\n      result[key] = child[key];\r\n    } else if (key in parent) {\r\n      result[key] = parent[key];\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getIconsTree(data, names) {\r\n  const icons = data.icons;\r\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\r\n  const resolved = /* @__PURE__ */ Object.create(null);\r\n  function resolve(name) {\r\n    if (icons[name]) {\r\n      return resolved[name] = [];\r\n    }\r\n    if (!(name in resolved)) {\r\n      resolved[name] = null;\r\n      const parent = aliases[name] && aliases[name].parent;\r\n      const value = parent && resolve(parent);\r\n      if (value) {\r\n        resolved[name] = [parent].concat(value);\r\n      }\r\n    }\r\n    return resolved[name];\r\n  }\r\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\r\n  return resolved;\r\n}\r\n\r\nfunction internalGetIconData(data, name, tree) {\r\n  const icons = data.icons;\r\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\r\n  let currentProps = {};\r\n  function parse(name2) {\r\n    currentProps = mergeIconData(\r\n      icons[name2] || aliases[name2],\r\n      currentProps\r\n    );\r\n  }\r\n  parse(name);\r\n  tree.forEach(parse);\r\n  return mergeIconData(data, currentProps);\r\n}\r\n\r\nfunction parseIconSet(data, callback) {\r\n  const names = [];\r\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\r\n    return names;\r\n  }\r\n  if (data.not_found instanceof Array) {\r\n    data.not_found.forEach((name) => {\r\n      callback(name, null);\r\n      names.push(name);\r\n    });\r\n  }\r\n  const tree = getIconsTree(data);\r\n  for (const name in tree) {\r\n    const item = tree[name];\r\n    if (item) {\r\n      callback(name, internalGetIconData(data, name, item));\r\n      names.push(name);\r\n    }\r\n  }\r\n  return names;\r\n}\r\n\r\nconst optionalPropertyDefaults = {\r\n  provider: \"\",\r\n  aliases: {},\r\n  not_found: {},\r\n  ...defaultIconDimensions\r\n};\r\nfunction checkOptionalProps(item, defaults) {\r\n  for (const prop in defaults) {\r\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction quicklyValidateIconSet(obj) {\r\n  if (typeof obj !== \"object\" || obj === null) {\r\n    return null;\r\n  }\r\n  const data = obj;\r\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\r\n    return null;\r\n  }\r\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\r\n    return null;\r\n  }\r\n  const icons = data.icons;\r\n  for (const name in icons) {\r\n    const icon = icons[name];\r\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\r\n      icon,\r\n      defaultExtendedIconProps\r\n    )) {\r\n      return null;\r\n    }\r\n  }\r\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\r\n  for (const name in aliases) {\r\n    const icon = aliases[name];\r\n    const parent = icon.parent;\r\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\r\n      icon,\r\n      defaultExtendedIconProps\r\n    )) {\r\n      return null;\r\n    }\r\n  }\r\n  return data;\r\n}\r\n\r\nconst dataStorage = /* @__PURE__ */ Object.create(null);\r\nfunction newStorage(provider, prefix) {\r\n  return {\r\n    provider,\r\n    prefix,\r\n    icons: /* @__PURE__ */ Object.create(null),\r\n    missing: /* @__PURE__ */ new Set()\r\n  };\r\n}\r\nfunction getStorage(provider, prefix) {\r\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\r\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\r\n}\r\nfunction addIconSet(storage, data) {\r\n  if (!quicklyValidateIconSet(data)) {\r\n    return [];\r\n  }\r\n  return parseIconSet(data, (name, icon) => {\r\n    if (icon) {\r\n      storage.icons[name] = icon;\r\n    } else {\r\n      storage.missing.add(name);\r\n    }\r\n  });\r\n}\r\nfunction addIconToStorage(storage, name, icon) {\r\n  try {\r\n    if (typeof icon.body === \"string\") {\r\n      storage.icons[name] = { ...icon };\r\n      return true;\r\n    }\r\n  } catch (err) {\r\n  }\r\n  return false;\r\n}\r\nfunction listIcons$1(provider, prefix) {\r\n  let allIcons = [];\r\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\r\n  providers.forEach((provider2) => {\r\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\r\n    prefixes.forEach((prefix2) => {\r\n      const storage = getStorage(provider2, prefix2);\r\n      allIcons = allIcons.concat(\r\n        Object.keys(storage.icons).map(\r\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\r\n        )\r\n      );\r\n    });\r\n  });\r\n  return allIcons;\r\n}\r\n\r\nlet simpleNames = false;\r\nfunction allowSimpleNames(allow) {\r\n  if (typeof allow === \"boolean\") {\r\n    simpleNames = allow;\r\n  }\r\n  return simpleNames;\r\n}\r\nfunction getIconData(name) {\r\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\r\n  if (icon) {\r\n    const storage = getStorage(icon.provider, icon.prefix);\r\n    const iconName = icon.name;\r\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\r\n  }\r\n}\r\nfunction addIcon$1(name, data) {\r\n  const icon = stringToIcon(name, true, simpleNames);\r\n  if (!icon) {\r\n    return false;\r\n  }\r\n  const storage = getStorage(icon.provider, icon.prefix);\r\n  return addIconToStorage(storage, icon.name, data);\r\n}\r\nfunction addCollection$1(data, provider) {\r\n  if (typeof data !== \"object\") {\r\n    return false;\r\n  }\r\n  if (typeof provider !== \"string\") {\r\n    provider = data.provider || \"\";\r\n  }\r\n  if (simpleNames && !provider && !data.prefix) {\r\n    let added = false;\r\n    if (quicklyValidateIconSet(data)) {\r\n      data.prefix = \"\";\r\n      parseIconSet(data, (name, icon) => {\r\n        if (icon && addIcon$1(name, icon)) {\r\n          added = true;\r\n        }\r\n      });\r\n    }\r\n    return added;\r\n  }\r\n  const prefix = data.prefix;\r\n  if (!validateIconName({\r\n    provider,\r\n    prefix,\r\n    name: \"a\"\r\n  })) {\r\n    return false;\r\n  }\r\n  const storage = getStorage(provider, prefix);\r\n  return !!addIconSet(storage, data);\r\n}\r\nfunction iconExists$1(name) {\r\n  return !!getIconData(name);\r\n}\r\nfunction getIcon$1(name) {\r\n  const result = getIconData(name);\r\n  return result ? {\r\n    ...defaultIconProps,\r\n    ...result\r\n  } : null;\r\n}\r\n\r\nfunction sortIcons(icons) {\r\n  const result = {\r\n    loaded: [],\r\n    missing: [],\r\n    pending: []\r\n  };\r\n  const storage = /* @__PURE__ */ Object.create(null);\r\n  icons.sort((a, b) => {\r\n    if (a.provider !== b.provider) {\r\n      return a.provider.localeCompare(b.provider);\r\n    }\r\n    if (a.prefix !== b.prefix) {\r\n      return a.prefix.localeCompare(b.prefix);\r\n    }\r\n    return a.name.localeCompare(b.name);\r\n  });\r\n  let lastIcon = {\r\n    provider: \"\",\r\n    prefix: \"\",\r\n    name: \"\"\r\n  };\r\n  icons.forEach((icon) => {\r\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\r\n      return;\r\n    }\r\n    lastIcon = icon;\r\n    const provider = icon.provider;\r\n    const prefix = icon.prefix;\r\n    const name = icon.name;\r\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\r\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\r\n    let list;\r\n    if (name in localStorage.icons) {\r\n      list = result.loaded;\r\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\r\n      list = result.missing;\r\n    } else {\r\n      list = result.pending;\r\n    }\r\n    const item = {\r\n      provider,\r\n      prefix,\r\n      name\r\n    };\r\n    list.push(item);\r\n  });\r\n  return result;\r\n}\r\n\r\nfunction removeCallback(storages, id) {\r\n  storages.forEach((storage) => {\r\n    const items = storage.loaderCallbacks;\r\n    if (items) {\r\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\r\n    }\r\n  });\r\n}\r\nfunction updateCallbacks(storage) {\r\n  if (!storage.pendingCallbacksFlag) {\r\n    storage.pendingCallbacksFlag = true;\r\n    setTimeout(() => {\r\n      storage.pendingCallbacksFlag = false;\r\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\r\n      if (!items.length) {\r\n        return;\r\n      }\r\n      let hasPending = false;\r\n      const provider = storage.provider;\r\n      const prefix = storage.prefix;\r\n      items.forEach((item) => {\r\n        const icons = item.icons;\r\n        const oldLength = icons.pending.length;\r\n        icons.pending = icons.pending.filter((icon) => {\r\n          if (icon.prefix !== prefix) {\r\n            return true;\r\n          }\r\n          const name = icon.name;\r\n          if (storage.icons[name]) {\r\n            icons.loaded.push({\r\n              provider,\r\n              prefix,\r\n              name\r\n            });\r\n          } else if (storage.missing.has(name)) {\r\n            icons.missing.push({\r\n              provider,\r\n              prefix,\r\n              name\r\n            });\r\n          } else {\r\n            hasPending = true;\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n        if (icons.pending.length !== oldLength) {\r\n          if (!hasPending) {\r\n            removeCallback([storage], item.id);\r\n          }\r\n          item.callback(\r\n            icons.loaded.slice(0),\r\n            icons.missing.slice(0),\r\n            icons.pending.slice(0),\r\n            item.abort\r\n          );\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\nlet idCounter = 0;\r\nfunction storeCallback(callback, icons, pendingSources) {\r\n  const id = idCounter++;\r\n  const abort = removeCallback.bind(null, pendingSources, id);\r\n  if (!icons.pending.length) {\r\n    return abort;\r\n  }\r\n  const item = {\r\n    id,\r\n    icons,\r\n    callback,\r\n    abort\r\n  };\r\n  pendingSources.forEach((storage) => {\r\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\r\n  });\r\n  return abort;\r\n}\r\n\r\nconst storage = /* @__PURE__ */ Object.create(null);\r\nfunction setAPIModule(provider, item) {\r\n  storage[provider] = item;\r\n}\r\nfunction getAPIModule(provider) {\r\n  return storage[provider] || storage[\"\"];\r\n}\r\n\r\nfunction listToIcons(list, validate = true, simpleNames = false) {\r\n  const result = [];\r\n  list.forEach((item) => {\r\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\r\n    if (icon) {\r\n      result.push(icon);\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\n// src/config.ts\r\nvar defaultConfig = {\r\n  resources: [],\r\n  index: 0,\r\n  timeout: 2e3,\r\n  rotate: 750,\r\n  random: false,\r\n  dataAfterTimeout: false\r\n};\r\n\r\n// src/query.ts\r\nfunction sendQuery(config, payload, query, done) {\r\n  const resourcesCount = config.resources.length;\r\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\r\n  let resources;\r\n  if (config.random) {\r\n    let list = config.resources.slice(0);\r\n    resources = [];\r\n    while (list.length > 1) {\r\n      const nextIndex = Math.floor(Math.random() * list.length);\r\n      resources.push(list[nextIndex]);\r\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\r\n    }\r\n    resources = resources.concat(list);\r\n  } else {\r\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\r\n  }\r\n  const startTime = Date.now();\r\n  let status = \"pending\";\r\n  let queriesSent = 0;\r\n  let lastError;\r\n  let timer = null;\r\n  let queue = [];\r\n  let doneCallbacks = [];\r\n  if (typeof done === \"function\") {\r\n    doneCallbacks.push(done);\r\n  }\r\n  function resetTimer() {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n      timer = null;\r\n    }\r\n  }\r\n  function abort() {\r\n    if (status === \"pending\") {\r\n      status = \"aborted\";\r\n    }\r\n    resetTimer();\r\n    queue.forEach((item) => {\r\n      if (item.status === \"pending\") {\r\n        item.status = \"aborted\";\r\n      }\r\n    });\r\n    queue = [];\r\n  }\r\n  function subscribe(callback, overwrite) {\r\n    if (overwrite) {\r\n      doneCallbacks = [];\r\n    }\r\n    if (typeof callback === \"function\") {\r\n      doneCallbacks.push(callback);\r\n    }\r\n  }\r\n  function getQueryStatus() {\r\n    return {\r\n      startTime,\r\n      payload,\r\n      status,\r\n      queriesSent,\r\n      queriesPending: queue.length,\r\n      subscribe,\r\n      abort\r\n    };\r\n  }\r\n  function failQuery() {\r\n    status = \"failed\";\r\n    doneCallbacks.forEach((callback) => {\r\n      callback(void 0, lastError);\r\n    });\r\n  }\r\n  function clearQueue() {\r\n    queue.forEach((item) => {\r\n      if (item.status === \"pending\") {\r\n        item.status = \"aborted\";\r\n      }\r\n    });\r\n    queue = [];\r\n  }\r\n  function moduleResponse(item, response, data) {\r\n    const isError = response !== \"success\";\r\n    queue = queue.filter((queued) => queued !== item);\r\n    switch (status) {\r\n      case \"pending\":\r\n        break;\r\n      case \"failed\":\r\n        if (isError || !config.dataAfterTimeout) {\r\n          return;\r\n        }\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    if (response === \"abort\") {\r\n      lastError = data;\r\n      failQuery();\r\n      return;\r\n    }\r\n    if (isError) {\r\n      lastError = data;\r\n      if (!queue.length) {\r\n        if (!resources.length) {\r\n          failQuery();\r\n        } else {\r\n          execNext();\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    resetTimer();\r\n    clearQueue();\r\n    if (!config.random) {\r\n      const index = config.resources.indexOf(item.resource);\r\n      if (index !== -1 && index !== config.index) {\r\n        config.index = index;\r\n      }\r\n    }\r\n    status = \"completed\";\r\n    doneCallbacks.forEach((callback) => {\r\n      callback(data);\r\n    });\r\n  }\r\n  function execNext() {\r\n    if (status !== \"pending\") {\r\n      return;\r\n    }\r\n    resetTimer();\r\n    const resource = resources.shift();\r\n    if (resource === void 0) {\r\n      if (queue.length) {\r\n        timer = setTimeout(() => {\r\n          resetTimer();\r\n          if (status === \"pending\") {\r\n            clearQueue();\r\n            failQuery();\r\n          }\r\n        }, config.timeout);\r\n        return;\r\n      }\r\n      failQuery();\r\n      return;\r\n    }\r\n    const item = {\r\n      status: \"pending\",\r\n      resource,\r\n      callback: (status2, data) => {\r\n        moduleResponse(item, status2, data);\r\n      }\r\n    };\r\n    queue.push(item);\r\n    queriesSent++;\r\n    timer = setTimeout(execNext, config.rotate);\r\n    query(resource, payload, item.callback);\r\n  }\r\n  setTimeout(execNext);\r\n  return getQueryStatus;\r\n}\r\n\r\n// src/index.ts\r\nfunction initRedundancy(cfg) {\r\n  const config = {\r\n    ...defaultConfig,\r\n    ...cfg\r\n  };\r\n  let queries = [];\r\n  function cleanup() {\r\n    queries = queries.filter((item) => item().status === \"pending\");\r\n  }\r\n  function query(payload, queryCallback, doneCallback) {\r\n    const query2 = sendQuery(\r\n      config,\r\n      payload,\r\n      queryCallback,\r\n      (data, error) => {\r\n        cleanup();\r\n        if (doneCallback) {\r\n          doneCallback(data, error);\r\n        }\r\n      }\r\n    );\r\n    queries.push(query2);\r\n    return query2;\r\n  }\r\n  function find(callback) {\r\n    return queries.find((value) => {\r\n      return callback(value);\r\n    }) || null;\r\n  }\r\n  const instance = {\r\n    query,\r\n    find,\r\n    setIndex: (index) => {\r\n      config.index = index;\r\n    },\r\n    getIndex: () => config.index,\r\n    cleanup\r\n  };\r\n  return instance;\r\n}\r\n\r\nfunction createAPIConfig(source) {\r\n  let resources;\r\n  if (typeof source.resources === \"string\") {\r\n    resources = [source.resources];\r\n  } else {\r\n    resources = source.resources;\r\n    if (!(resources instanceof Array) || !resources.length) {\r\n      return null;\r\n    }\r\n  }\r\n  const result = {\r\n    // API hosts\r\n    resources,\r\n    // Root path\r\n    path: source.path || \"/\",\r\n    // URL length limit\r\n    maxURL: source.maxURL || 500,\r\n    // Timeout before next host is used.\r\n    rotate: source.rotate || 750,\r\n    // Timeout before failing query.\r\n    timeout: source.timeout || 5e3,\r\n    // Randomise default API end point.\r\n    random: source.random === true,\r\n    // Start index\r\n    index: source.index || 0,\r\n    // Receive data after time out (used if time out kicks in first, then API module sends data anyway).\r\n    dataAfterTimeout: source.dataAfterTimeout !== false\r\n  };\r\n  return result;\r\n}\r\nconst configStorage = /* @__PURE__ */ Object.create(null);\r\nconst fallBackAPISources = [\r\n  \"https://api.simplesvg.com\",\r\n  \"https://api.unisvg.com\"\r\n];\r\nconst fallBackAPI = [];\r\nwhile (fallBackAPISources.length > 0) {\r\n  if (fallBackAPISources.length === 1) {\r\n    fallBackAPI.push(fallBackAPISources.shift());\r\n  } else {\r\n    if (Math.random() > 0.5) {\r\n      fallBackAPI.push(fallBackAPISources.shift());\r\n    } else {\r\n      fallBackAPI.push(fallBackAPISources.pop());\r\n    }\r\n  }\r\n}\r\nconfigStorage[\"\"] = createAPIConfig({\r\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\r\n});\r\nfunction addAPIProvider$1(provider, customConfig) {\r\n  const config = createAPIConfig(customConfig);\r\n  if (config === null) {\r\n    return false;\r\n  }\r\n  configStorage[provider] = config;\r\n  return true;\r\n}\r\nfunction getAPIConfig(provider) {\r\n  return configStorage[provider];\r\n}\r\nfunction listAPIProviders() {\r\n  return Object.keys(configStorage);\r\n}\r\n\r\nfunction emptyCallback$1() {\r\n}\r\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\r\nfunction getRedundancyCache(provider) {\r\n  if (!redundancyCache[provider]) {\r\n    const config = getAPIConfig(provider);\r\n    if (!config) {\r\n      return;\r\n    }\r\n    const redundancy = initRedundancy(config);\r\n    const cachedReundancy = {\r\n      config,\r\n      redundancy\r\n    };\r\n    redundancyCache[provider] = cachedReundancy;\r\n  }\r\n  return redundancyCache[provider];\r\n}\r\nfunction sendAPIQuery(target, query, callback) {\r\n  let redundancy;\r\n  let send;\r\n  if (typeof target === \"string\") {\r\n    const api = getAPIModule(target);\r\n    if (!api) {\r\n      callback(void 0, 424);\r\n      return emptyCallback$1;\r\n    }\r\n    send = api.send;\r\n    const cached = getRedundancyCache(target);\r\n    if (cached) {\r\n      redundancy = cached.redundancy;\r\n    }\r\n  } else {\r\n    const config = createAPIConfig(target);\r\n    if (config) {\r\n      redundancy = initRedundancy(config);\r\n      const moduleKey = target.resources ? target.resources[0] : \"\";\r\n      const api = getAPIModule(moduleKey);\r\n      if (api) {\r\n        send = api.send;\r\n      }\r\n    }\r\n  }\r\n  if (!redundancy || !send) {\r\n    callback(void 0, 424);\r\n    return emptyCallback$1;\r\n  }\r\n  return redundancy.query(query, send, callback)().abort;\r\n}\r\n\r\nconst browserCacheVersion = \"iconify2\";\r\nconst browserCachePrefix = \"iconify\";\r\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\r\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\r\nconst browserStorageHour = 36e5;\r\nconst browserStorageCacheExpiration = 168;\r\n\r\nfunction getStoredItem(func, key) {\r\n  try {\r\n    return func.getItem(key);\r\n  } catch (err) {\r\n  }\r\n}\r\nfunction setStoredItem(func, key, value) {\r\n  try {\r\n    func.setItem(key, value);\r\n    return true;\r\n  } catch (err) {\r\n  }\r\n}\r\nfunction removeStoredItem(func, key) {\r\n  try {\r\n    func.removeItem(key);\r\n  } catch (err) {\r\n  }\r\n}\r\n\r\nfunction setBrowserStorageItemsCount(storage, value) {\r\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\r\n}\r\nfunction getBrowserStorageItemsCount(storage) {\r\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\r\n}\r\n\r\nconst browserStorageConfig = {\r\n  local: true,\r\n  session: true\r\n};\r\nconst browserStorageEmptyItems = {\r\n  local: /* @__PURE__ */ new Set(),\r\n  session: /* @__PURE__ */ new Set()\r\n};\r\nlet browserStorageStatus = false;\r\nfunction setBrowserStorageStatus(status) {\r\n  browserStorageStatus = status;\r\n}\r\n\r\nlet _window = typeof window === \"undefined\" ? {} : window;\r\nfunction getBrowserStorage(key) {\r\n  const attr = key + \"Storage\";\r\n  try {\r\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\r\n      return _window[attr];\r\n    }\r\n  } catch (err) {\r\n  }\r\n  browserStorageConfig[key] = false;\r\n}\r\n\r\nfunction iterateBrowserStorage(key, callback) {\r\n  const func = getBrowserStorage(key);\r\n  if (!func) {\r\n    return;\r\n  }\r\n  const version = getStoredItem(func, browserCacheVersionKey);\r\n  if (version !== browserCacheVersion) {\r\n    if (version) {\r\n      const total2 = getBrowserStorageItemsCount(func);\r\n      for (let i = 0; i < total2; i++) {\r\n        removeStoredItem(func, browserCachePrefix + i.toString());\r\n      }\r\n    }\r\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\r\n    setBrowserStorageItemsCount(func, 0);\r\n    return;\r\n  }\r\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\r\n  const parseItem = (index) => {\r\n    const name = browserCachePrefix + index.toString();\r\n    const item = getStoredItem(func, name);\r\n    if (typeof item !== \"string\") {\r\n      return;\r\n    }\r\n    try {\r\n      const data = JSON.parse(item);\r\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && // Valid item: run callback\r\n      callback(data, index)) {\r\n        return true;\r\n      }\r\n    } catch (err) {\r\n    }\r\n    removeStoredItem(func, name);\r\n  };\r\n  let total = getBrowserStorageItemsCount(func);\r\n  for (let i = total - 1; i >= 0; i--) {\r\n    if (!parseItem(i)) {\r\n      if (i === total - 1) {\r\n        total--;\r\n        setBrowserStorageItemsCount(func, total);\r\n      } else {\r\n        browserStorageEmptyItems[key].add(i);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction initBrowserStorage() {\r\n  if (browserStorageStatus) {\r\n    return;\r\n  }\r\n  setBrowserStorageStatus(true);\r\n  for (const key in browserStorageConfig) {\r\n    iterateBrowserStorage(key, (item) => {\r\n      const iconSet = item.data;\r\n      const provider = item.provider;\r\n      const prefix = iconSet.prefix;\r\n      const storage = getStorage(\r\n        provider,\r\n        prefix\r\n      );\r\n      if (!addIconSet(storage, iconSet).length) {\r\n        return false;\r\n      }\r\n      const lastModified = iconSet.lastModified || -1;\r\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\r\n      return true;\r\n    });\r\n  }\r\n}\r\n\r\nfunction updateLastModified(storage, lastModified) {\r\n  const lastValue = storage.lastModifiedCached;\r\n  if (\r\n    // Matches or newer\r\n    lastValue && lastValue >= lastModified\r\n  ) {\r\n    return lastValue === lastModified;\r\n  }\r\n  storage.lastModifiedCached = lastModified;\r\n  if (lastValue) {\r\n    for (const key in browserStorageConfig) {\r\n      iterateBrowserStorage(key, (item) => {\r\n        const iconSet = item.data;\r\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\r\n      });\r\n    }\r\n  }\r\n  return true;\r\n}\r\nfunction storeInBrowserStorage(storage, data) {\r\n  if (!browserStorageStatus) {\r\n    initBrowserStorage();\r\n  }\r\n  function store(key) {\r\n    let func;\r\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\r\n      return;\r\n    }\r\n    const set = browserStorageEmptyItems[key];\r\n    let index;\r\n    if (set.size) {\r\n      set.delete(index = Array.from(set).shift());\r\n    } else {\r\n      index = getBrowserStorageItemsCount(func);\r\n      if (!setBrowserStorageItemsCount(func, index + 1)) {\r\n        return;\r\n      }\r\n    }\r\n    const item = {\r\n      cached: Math.floor(Date.now() / browserStorageHour),\r\n      provider: storage.provider,\r\n      data\r\n    };\r\n    return setStoredItem(\r\n      func,\r\n      browserCachePrefix + index.toString(),\r\n      JSON.stringify(item)\r\n    );\r\n  }\r\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\r\n    return;\r\n  }\r\n  if (!Object.keys(data.icons).length) {\r\n    return;\r\n  }\r\n  if (data.not_found) {\r\n    data = Object.assign({}, data);\r\n    delete data.not_found;\r\n  }\r\n  if (!store(\"local\")) {\r\n    store(\"session\");\r\n  }\r\n}\r\n\r\nfunction emptyCallback() {\r\n}\r\nfunction loadedNewIcons(storage) {\r\n  if (!storage.iconsLoaderFlag) {\r\n    storage.iconsLoaderFlag = true;\r\n    setTimeout(() => {\r\n      storage.iconsLoaderFlag = false;\r\n      updateCallbacks(storage);\r\n    });\r\n  }\r\n}\r\nfunction loadNewIcons(storage, icons) {\r\n  if (!storage.iconsToLoad) {\r\n    storage.iconsToLoad = icons;\r\n  } else {\r\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\r\n  }\r\n  if (!storage.iconsQueueFlag) {\r\n    storage.iconsQueueFlag = true;\r\n    setTimeout(() => {\r\n      storage.iconsQueueFlag = false;\r\n      const { provider, prefix } = storage;\r\n      const icons2 = storage.iconsToLoad;\r\n      delete storage.iconsToLoad;\r\n      let api;\r\n      if (!icons2 || !(api = getAPIModule(provider))) {\r\n        return;\r\n      }\r\n      const params = api.prepare(provider, prefix, icons2);\r\n      params.forEach((item) => {\r\n        sendAPIQuery(provider, item, (data) => {\r\n          if (typeof data !== \"object\") {\r\n            item.icons.forEach((name) => {\r\n              storage.missing.add(name);\r\n            });\r\n          } else {\r\n            try {\r\n              const parsed = addIconSet(\r\n                storage,\r\n                data\r\n              );\r\n              if (!parsed.length) {\r\n                return;\r\n              }\r\n              const pending = storage.pendingIcons;\r\n              if (pending) {\r\n                parsed.forEach((name) => {\r\n                  pending.delete(name);\r\n                });\r\n              }\r\n              storeInBrowserStorage(storage, data);\r\n            } catch (err) {\r\n              console.error(err);\r\n            }\r\n          }\r\n          loadedNewIcons(storage);\r\n        });\r\n      });\r\n    });\r\n  }\r\n}\r\nconst loadIcons$1 = (icons, callback) => {\r\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\r\n  const sortedIcons = sortIcons(cleanedIcons);\r\n  if (!sortedIcons.pending.length) {\r\n    let callCallback = true;\r\n    if (callback) {\r\n      setTimeout(() => {\r\n        if (callCallback) {\r\n          callback(\r\n            sortedIcons.loaded,\r\n            sortedIcons.missing,\r\n            sortedIcons.pending,\r\n            emptyCallback\r\n          );\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      callCallback = false;\r\n    };\r\n  }\r\n  const newIcons = /* @__PURE__ */ Object.create(null);\r\n  const sources = [];\r\n  let lastProvider, lastPrefix;\r\n  sortedIcons.pending.forEach((icon) => {\r\n    const { provider, prefix } = icon;\r\n    if (prefix === lastPrefix && provider === lastProvider) {\r\n      return;\r\n    }\r\n    lastProvider = provider;\r\n    lastPrefix = prefix;\r\n    sources.push(getStorage(provider, prefix));\r\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\r\n    if (!providerNewIcons[prefix]) {\r\n      providerNewIcons[prefix] = [];\r\n    }\r\n  });\r\n  sortedIcons.pending.forEach((icon) => {\r\n    const { provider, prefix, name } = icon;\r\n    const storage = getStorage(provider, prefix);\r\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\r\n    if (!pendingQueue.has(name)) {\r\n      pendingQueue.add(name);\r\n      newIcons[provider][prefix].push(name);\r\n    }\r\n  });\r\n  sources.forEach((storage) => {\r\n    const { provider, prefix } = storage;\r\n    if (newIcons[provider][prefix].length) {\r\n      loadNewIcons(storage, newIcons[provider][prefix]);\r\n    }\r\n  });\r\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\r\n};\r\nconst loadIcon$1 = (icon) => {\r\n  return new Promise((fulfill, reject) => {\r\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\r\n    if (!iconObj) {\r\n      reject(icon);\r\n      return;\r\n    }\r\n    loadIcons$1([iconObj || icon], (loaded) => {\r\n      if (loaded.length && iconObj) {\r\n        const data = getIconData(iconObj);\r\n        if (data) {\r\n          fulfill({\r\n            ...defaultIconProps,\r\n            ...data\r\n          });\r\n          return;\r\n        }\r\n      }\r\n      reject(icon);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Test icon string\r\n */\r\nfunction testIconObject(value) {\r\n    try {\r\n        const obj = typeof value === 'string' ? JSON.parse(value) : value;\r\n        if (typeof obj.body === 'string') {\r\n            return {\r\n                ...obj,\r\n            };\r\n        }\r\n    }\r\n    catch (err) {\r\n        //\r\n    }\r\n}\r\n\r\n/**\r\n * Parse icon value, load if needed\r\n */\r\nfunction parseIconValue(value, onload) {\r\n    // Check if icon name is valid\r\n    const name = typeof value === 'string' ? stringToIcon(value, true, true) : null;\r\n    if (!name) {\r\n        // Test for serialised object\r\n        const data = testIconObject(value);\r\n        return {\r\n            value,\r\n            data,\r\n        };\r\n    }\r\n    // Valid icon name: check if data is available\r\n    const data = getIconData(name);\r\n    // Icon data exists or icon has no prefix. Do not load icon from API if icon has no prefix\r\n    if (data !== void 0 || !name.prefix) {\r\n        return {\r\n            value,\r\n            name,\r\n            data, // could be 'null' -> icon is missing\r\n        };\r\n    }\r\n    // Load icon\r\n    const loading = loadIcons$1([name], () => onload(value, name, getIconData(name)));\r\n    return {\r\n        value,\r\n        name,\r\n        loading,\r\n    };\r\n}\r\n\r\n/**\r\n * Check for inline\r\n */\r\nfunction getInline(node) {\r\n    return node.hasAttribute('inline');\r\n}\r\n\r\n// Check for Safari\r\nlet isBuggedSafari = false;\r\ntry {\r\n    isBuggedSafari = navigator.vendor.indexOf('Apple') === 0;\r\n}\r\ncatch (err) {\r\n    //\r\n}\r\n/**\r\n * Get render mode\r\n */\r\nfunction getRenderMode(body, mode) {\r\n    switch (mode) {\r\n        // Force mode\r\n        case 'svg':\r\n        case 'bg':\r\n        case 'mask':\r\n            return mode;\r\n    }\r\n    // Check for animation, use 'style' for animated icons, unless browser is Safari\r\n    // (only <a>, which should be ignored or animations start with '<a')\r\n    if (mode !== 'style' &&\r\n        (isBuggedSafari || body.indexOf('<a') === -1)) {\r\n        // Render <svg>\r\n        return 'svg';\r\n    }\r\n    // Use background or mask\r\n    return body.indexOf('currentColor') === -1 ? 'bg' : 'mask';\r\n}\r\n\r\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\r\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\r\nfunction calculateSize$1(size, ratio, precision) {\r\n  if (ratio === 1) {\r\n    return size;\r\n  }\r\n  precision = precision || 100;\r\n  if (typeof size === \"number\") {\r\n    return Math.ceil(size * ratio * precision) / precision;\r\n  }\r\n  if (typeof size !== \"string\") {\r\n    return size;\r\n  }\r\n  const oldParts = size.split(unitsSplit);\r\n  if (oldParts === null || !oldParts.length) {\r\n    return size;\r\n  }\r\n  const newParts = [];\r\n  let code = oldParts.shift();\r\n  let isNumber = unitsTest.test(code);\r\n  while (true) {\r\n    if (isNumber) {\r\n      const num = parseFloat(code);\r\n      if (isNaN(num)) {\r\n        newParts.push(code);\r\n      } else {\r\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\r\n      }\r\n    } else {\r\n      newParts.push(code);\r\n    }\r\n    code = oldParts.shift();\r\n    if (code === void 0) {\r\n      return newParts.join(\"\");\r\n    }\r\n    isNumber = !isNumber;\r\n  }\r\n}\r\n\r\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\r\nfunction iconToSVG(icon, customisations) {\r\n  const fullIcon = {\r\n    ...defaultIconProps,\r\n    ...icon\r\n  };\r\n  const fullCustomisations = {\r\n    ...defaultIconCustomisations,\r\n    ...customisations\r\n  };\r\n  const box = {\r\n    left: fullIcon.left,\r\n    top: fullIcon.top,\r\n    width: fullIcon.width,\r\n    height: fullIcon.height\r\n  };\r\n  let body = fullIcon.body;\r\n  [fullIcon, fullCustomisations].forEach((props) => {\r\n    const transformations = [];\r\n    const hFlip = props.hFlip;\r\n    const vFlip = props.vFlip;\r\n    let rotation = props.rotate;\r\n    if (hFlip) {\r\n      if (vFlip) {\r\n        rotation += 2;\r\n      } else {\r\n        transformations.push(\r\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\r\n        );\r\n        transformations.push(\"scale(-1 1)\");\r\n        box.top = box.left = 0;\r\n      }\r\n    } else if (vFlip) {\r\n      transformations.push(\r\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\r\n      );\r\n      transformations.push(\"scale(1 -1)\");\r\n      box.top = box.left = 0;\r\n    }\r\n    let tempValue;\r\n    if (rotation < 0) {\r\n      rotation -= Math.floor(rotation / 4) * 4;\r\n    }\r\n    rotation = rotation % 4;\r\n    switch (rotation) {\r\n      case 1:\r\n        tempValue = box.height / 2 + box.top;\r\n        transformations.unshift(\r\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\r\n        );\r\n        break;\r\n      case 2:\r\n        transformations.unshift(\r\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\r\n        );\r\n        break;\r\n      case 3:\r\n        tempValue = box.width / 2 + box.left;\r\n        transformations.unshift(\r\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\r\n        );\r\n        break;\r\n    }\r\n    if (rotation % 2 === 1) {\r\n      if (box.left !== box.top) {\r\n        tempValue = box.left;\r\n        box.left = box.top;\r\n        box.top = tempValue;\r\n      }\r\n      if (box.width !== box.height) {\r\n        tempValue = box.width;\r\n        box.width = box.height;\r\n        box.height = tempValue;\r\n      }\r\n    }\r\n    if (transformations.length) {\r\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\r\n    }\r\n  });\r\n  const customisationsWidth = fullCustomisations.width;\r\n  const customisationsHeight = fullCustomisations.height;\r\n  const boxWidth = box.width;\r\n  const boxHeight = box.height;\r\n  let width;\r\n  let height;\r\n  if (customisationsWidth === null) {\r\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\r\n    width = calculateSize$1(height, boxWidth / boxHeight);\r\n  } else {\r\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\r\n    height = customisationsHeight === null ? calculateSize$1(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\r\n  }\r\n  const attributes = {};\r\n  const setAttr = (prop, value) => {\r\n    if (!isUnsetKeyword(value)) {\r\n      attributes[prop] = value.toString();\r\n    }\r\n  };\r\n  setAttr(\"width\", width);\r\n  setAttr(\"height\", height);\r\n  attributes.viewBox = box.left.toString() + \" \" + box.top.toString() + \" \" + boxWidth.toString() + \" \" + boxHeight.toString();\r\n  return {\r\n    attributes,\r\n    body\r\n  };\r\n}\r\n\r\nconst detectFetch = () => {\r\n  let callback;\r\n  try {\r\n    callback = fetch;\r\n    if (typeof callback === \"function\") {\r\n      return callback;\r\n    }\r\n  } catch (err) {\r\n  }\r\n};\r\nlet fetchModule = detectFetch();\r\nfunction setFetch(fetch2) {\r\n  fetchModule = fetch2;\r\n}\r\nfunction getFetch() {\r\n  return fetchModule;\r\n}\r\nfunction calculateMaxLength(provider, prefix) {\r\n  const config = getAPIConfig(provider);\r\n  if (!config) {\r\n    return 0;\r\n  }\r\n  let result;\r\n  if (!config.maxURL) {\r\n    result = 0;\r\n  } else {\r\n    let maxHostLength = 0;\r\n    config.resources.forEach((item) => {\r\n      const host = item;\r\n      maxHostLength = Math.max(maxHostLength, host.length);\r\n    });\r\n    const url = prefix + \".json?icons=\";\r\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\r\n  }\r\n  return result;\r\n}\r\nfunction shouldAbort(status) {\r\n  return status === 404;\r\n}\r\nconst prepare = (provider, prefix, icons) => {\r\n  const results = [];\r\n  const maxLength = calculateMaxLength(provider, prefix);\r\n  const type = \"icons\";\r\n  let item = {\r\n    type,\r\n    provider,\r\n    prefix,\r\n    icons: []\r\n  };\r\n  let length = 0;\r\n  icons.forEach((name, index) => {\r\n    length += name.length + 1;\r\n    if (length >= maxLength && index > 0) {\r\n      results.push(item);\r\n      item = {\r\n        type,\r\n        provider,\r\n        prefix,\r\n        icons: []\r\n      };\r\n      length = name.length;\r\n    }\r\n    item.icons.push(name);\r\n  });\r\n  results.push(item);\r\n  return results;\r\n};\r\nfunction getPath(provider) {\r\n  if (typeof provider === \"string\") {\r\n    const config = getAPIConfig(provider);\r\n    if (config) {\r\n      return config.path;\r\n    }\r\n  }\r\n  return \"/\";\r\n}\r\nconst send = (host, params, callback) => {\r\n  if (!fetchModule) {\r\n    callback(\"abort\", 424);\r\n    return;\r\n  }\r\n  let path = getPath(params.provider);\r\n  switch (params.type) {\r\n    case \"icons\": {\r\n      const prefix = params.prefix;\r\n      const icons = params.icons;\r\n      const iconsList = icons.join(\",\");\r\n      const urlParams = new URLSearchParams({\r\n        icons: iconsList\r\n      });\r\n      path += prefix + \".json?\" + urlParams.toString();\r\n      break;\r\n    }\r\n    case \"custom\": {\r\n      const uri = params.uri;\r\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\r\n      break;\r\n    }\r\n    default:\r\n      callback(\"abort\", 400);\r\n      return;\r\n  }\r\n  let defaultError = 503;\r\n  fetchModule(host + path).then((response) => {\r\n    const status = response.status;\r\n    if (status !== 200) {\r\n      setTimeout(() => {\r\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\r\n      });\r\n      return;\r\n    }\r\n    defaultError = 501;\r\n    return response.json();\r\n  }).then((data) => {\r\n    if (typeof data !== \"object\" || data === null) {\r\n      setTimeout(() => {\r\n        if (data === 404) {\r\n          callback(\"abort\", data);\r\n        } else {\r\n          callback(\"next\", defaultError);\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      callback(\"success\", data);\r\n    });\r\n  }).catch(() => {\r\n    callback(\"next\", defaultError);\r\n  });\r\n};\r\nconst fetchAPIModule = {\r\n  prepare,\r\n  send\r\n};\r\n\r\nfunction toggleBrowserCache(storage, value) {\r\n  switch (storage) {\r\n    case \"local\":\r\n    case \"session\":\r\n      browserStorageConfig[storage] = value;\r\n      break;\r\n    case \"all\":\r\n      for (const key in browserStorageConfig) {\r\n        browserStorageConfig[key] = value;\r\n      }\r\n      break;\r\n  }\r\n}\r\n\r\n/**\r\n * Attribute to add\r\n */\r\nconst nodeAttr = 'data-style';\r\n/**\r\n * Custom style to add to each node\r\n */\r\nlet customStyle = '';\r\n/**\r\n * Set custom style to add to all components\r\n *\r\n * Affects only components rendered after function call\r\n */\r\nfunction appendCustomStyle(style) {\r\n    customStyle = style;\r\n}\r\n/**\r\n * Add/update style node\r\n */\r\nfunction updateStyle(parent, inline) {\r\n    // Get node, create if needed\r\n    let styleNode = Array.from(parent.childNodes).find((node) => node.hasAttribute &&\r\n        node.hasAttribute(nodeAttr));\r\n    if (!styleNode) {\r\n        styleNode = document.createElement('style');\r\n        styleNode.setAttribute(nodeAttr, nodeAttr);\r\n        parent.appendChild(styleNode);\r\n    }\r\n    // Update content\r\n    styleNode.textContent =\r\n        ':host{display:inline-block;vertical-align:' +\r\n            (inline ? '-0.125em' : '0') +\r\n            '}span,svg{display:block}' +\r\n            customStyle;\r\n}\r\n\r\n// Core\r\n/**\r\n * Get functions and initialise stuff\r\n */\r\nfunction exportFunctions() {\r\n    /**\r\n     * Initialise stuff\r\n     */\r\n    // Set API module\r\n    setAPIModule('', fetchAPIModule);\r\n    // Allow simple icon names\r\n    allowSimpleNames(true);\r\n    let _window;\r\n    try {\r\n        _window = window;\r\n    }\r\n    catch (err) {\r\n        //\r\n    }\r\n    if (_window) {\r\n        // Set cache and load existing cache\r\n        initBrowserStorage();\r\n        // Load icons from global \"IconifyPreload\"\r\n        if (_window.IconifyPreload !== void 0) {\r\n            const preload = _window.IconifyPreload;\r\n            const err = 'Invalid IconifyPreload syntax.';\r\n            if (typeof preload === 'object' && preload !== null) {\r\n                (preload instanceof Array ? preload : [preload]).forEach((item) => {\r\n                    try {\r\n                        if (\r\n                        // Check if item is an object and not null/array\r\n                        typeof item !== 'object' ||\r\n                            item === null ||\r\n                            item instanceof Array ||\r\n                            // Check for 'icons' and 'prefix'\r\n                            typeof item.icons !== 'object' ||\r\n                            typeof item.prefix !== 'string' ||\r\n                            // Add icon set\r\n                            !addCollection$1(item)) {\r\n                            console.error(err);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        console.error(err);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        // Set API from global \"IconifyProviders\"\r\n        if (_window.IconifyProviders !== void 0) {\r\n            const providers = _window.IconifyProviders;\r\n            if (typeof providers === 'object' && providers !== null) {\r\n                for (const key in providers) {\r\n                    const err = 'IconifyProviders[' + key + '] is invalid.';\r\n                    try {\r\n                        const value = providers[key];\r\n                        if (typeof value !== 'object' ||\r\n                            !value ||\r\n                            value.resources === void 0) {\r\n                            continue;\r\n                        }\r\n                        if (!addAPIProvider$1(key, value)) {\r\n                            console.error(err);\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        console.error(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const _api = {\r\n        getAPIConfig,\r\n        setAPIModule,\r\n        sendAPIQuery,\r\n        setFetch,\r\n        getFetch,\r\n        listAPIProviders,\r\n    };\r\n    return {\r\n        enableCache: (storage) => toggleBrowserCache(storage, true),\r\n        disableCache: (storage) => toggleBrowserCache(storage, false),\r\n        iconExists: iconExists$1,\r\n        getIcon: getIcon$1,\r\n        listIcons: listIcons$1,\r\n        addIcon: addIcon$1,\r\n        addCollection: addCollection$1,\r\n        calculateSize: calculateSize$1,\r\n        buildIcon: iconToSVG,\r\n        loadIcons: loadIcons$1,\r\n        loadIcon: loadIcon$1,\r\n        addAPIProvider: addAPIProvider$1,\r\n        appendCustomStyle,\r\n        _api,\r\n    };\r\n}\r\n\r\nfunction iconToHTML(body, attributes) {\r\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\r\n  for (const attr in attributes) {\r\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\r\n  }\r\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\r\n}\r\n\r\nfunction encodeSVGforURL(svg) {\r\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\r\n}\r\nfunction svgToData(svg) {\r\n  return \"data:image/svg+xml,\" + encodeSVGforURL(svg);\r\n}\r\nfunction svgToURL(svg) {\r\n  return 'url(\"' + svgToData(svg) + '\")';\r\n}\r\n\r\n// List of properties to apply\r\nconst monotoneProps = {\r\n    'background-color': 'currentColor',\r\n};\r\nconst coloredProps = {\r\n    'background-color': 'transparent',\r\n};\r\n// Dynamically add common props to variables above\r\nconst propsToAdd = {\r\n    image: 'var(--svg)',\r\n    repeat: 'no-repeat',\r\n    size: '100% 100%',\r\n};\r\nconst propsToAddTo = {\r\n    '-webkit-mask': monotoneProps,\r\n    'mask': monotoneProps,\r\n    'background': coloredProps,\r\n};\r\nfor (const prefix in propsToAddTo) {\r\n    const list = propsToAddTo[prefix];\r\n    for (const prop in propsToAdd) {\r\n        list[prefix + '-' + prop] = propsToAdd[prop];\r\n    }\r\n}\r\n/**\r\n * Fix size: add 'px' to numbers\r\n */\r\nfunction fixSize(value) {\r\n    return value ? value + (value.match(/^[-0-9.]+$/) ? 'px' : '') : 'inherit';\r\n}\r\n/**\r\n * Render node as <span>\r\n */\r\nfunction renderSPAN(data, icon, useMask) {\r\n    const node = document.createElement('span');\r\n    // Body\r\n    let body = data.body;\r\n    if (body.indexOf('<a') !== -1) {\r\n        // Animated SVG: add something to fix timing bug\r\n        body += '<!-- ' + Date.now() + ' -->';\r\n    }\r\n    // Generate SVG as URL\r\n    const renderAttribs = data.attributes;\r\n    const html = iconToHTML(body, {\r\n        ...renderAttribs,\r\n        width: icon.width + '',\r\n        height: icon.height + '',\r\n    });\r\n    const url = svgToURL(html);\r\n    // Generate style\r\n    const svgStyle = node.style;\r\n    const styles = {\r\n        '--svg': url,\r\n        'width': fixSize(renderAttribs.width),\r\n        'height': fixSize(renderAttribs.height),\r\n        ...(useMask ? monotoneProps : coloredProps),\r\n    };\r\n    // Apply style\r\n    for (const prop in styles) {\r\n        svgStyle.setProperty(prop, styles[prop]);\r\n    }\r\n    return node;\r\n}\r\n\r\nlet policy;\r\nfunction createPolicy() {\r\n  try {\r\n    policy = window.trustedTypes.createPolicy(\"iconify\", {\r\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\r\n      createHTML: (s) => s\r\n    });\r\n  } catch (err) {\r\n    policy = null;\r\n  }\r\n}\r\nfunction cleanUpInnerHTML(html) {\r\n  if (policy === void 0) {\r\n    createPolicy();\r\n  }\r\n  return policy ? policy.createHTML(html) : html;\r\n}\r\n\r\n/**\r\n * Render node as <svg>\r\n */\r\nfunction renderSVG(data) {\r\n    const node = document.createElement('span');\r\n    // Add style if needed\r\n    const attr = data.attributes;\r\n    let style = '';\r\n    if (!attr.width) {\r\n        style = 'width: inherit;';\r\n    }\r\n    if (!attr.height) {\r\n        style += 'height: inherit;';\r\n    }\r\n    if (style) {\r\n        attr.style = style;\r\n    }\r\n    // Generate SVG\r\n    const html = iconToHTML(data.body, attr);\r\n    node.innerHTML = cleanUpInnerHTML(html);\r\n    return node.firstChild;\r\n}\r\n\r\n/**\r\n * Render icon\r\n */\r\nfunction renderIcon(parent, state) {\r\n    const iconData = state.icon.data;\r\n    const customisations = state.customisations;\r\n    // Render icon\r\n    const renderData = iconToSVG(iconData, customisations);\r\n    if (customisations.preserveAspectRatio) {\r\n        renderData.attributes['preserveAspectRatio'] =\r\n            customisations.preserveAspectRatio;\r\n    }\r\n    const mode = state.renderedMode;\r\n    let node;\r\n    switch (mode) {\r\n        case 'svg':\r\n            node = renderSVG(renderData);\r\n            break;\r\n        default:\r\n            node = renderSPAN(renderData, {\r\n                ...defaultIconProps,\r\n                ...iconData,\r\n            }, mode === 'mask');\r\n    }\r\n    // Set element\r\n    const oldNode = Array.from(parent.childNodes).find((node) => {\r\n        const tag = node.tagName &&\r\n            node.tagName.toUpperCase();\r\n        return tag === 'SPAN' || tag === 'SVG';\r\n    });\r\n    if (oldNode) {\r\n        // Replace old element\r\n        if (node.tagName === 'SPAN' && oldNode.tagName === node.tagName) {\r\n            // Swap style instead of whole node\r\n            oldNode.setAttribute('style', node.getAttribute('style'));\r\n        }\r\n        else {\r\n            parent.replaceChild(node, oldNode);\r\n        }\r\n    }\r\n    else {\r\n        // Add new element\r\n        parent.appendChild(node);\r\n    }\r\n}\r\n\r\n/**\r\n * Set state to PendingState\r\n */\r\nfunction setPendingState(icon, inline, lastState) {\r\n    const lastRender = lastState &&\r\n        (lastState.rendered\r\n            ? lastState\r\n            : lastState.lastRender);\r\n    return {\r\n        rendered: false,\r\n        inline,\r\n        icon,\r\n        lastRender,\r\n    };\r\n}\r\n\r\n/**\r\n * Register 'iconify-icon' component, if it does not exist\r\n */\r\nfunction defineIconifyIcon(name = 'iconify-icon') {\r\n    // Check for custom elements registry and HTMLElement\r\n    let customElements;\r\n    let ParentClass;\r\n    try {\r\n        customElements = window.customElements;\r\n        ParentClass = window.HTMLElement;\r\n    }\r\n    catch (err) {\r\n        return;\r\n    }\r\n    // Make sure registry and HTMLElement exist\r\n    if (!customElements || !ParentClass) {\r\n        return;\r\n    }\r\n    // Check for duplicate\r\n    const ConflictingClass = customElements.get(name);\r\n    if (ConflictingClass) {\r\n        return ConflictingClass;\r\n    }\r\n    // All attributes\r\n    const attributes = [\r\n        // Icon\r\n        'icon',\r\n        // Mode\r\n        'mode',\r\n        'inline',\r\n        // Customisations\r\n        'width',\r\n        'height',\r\n        'rotate',\r\n        'flip',\r\n    ];\r\n    /**\r\n     * Component class\r\n     */\r\n    const IconifyIcon = class extends ParentClass {\r\n        // Root\r\n        _shadowRoot;\r\n        // State\r\n        _state;\r\n        // Attributes check queued\r\n        _checkQueued = false;\r\n        /**\r\n         * Constructor\r\n         */\r\n        constructor() {\r\n            super();\r\n            // Attach shadow DOM\r\n            const root = (this._shadowRoot = this.attachShadow({\r\n                mode: 'open',\r\n            }));\r\n            // Add style\r\n            const inline = getInline(this);\r\n            updateStyle(root, inline);\r\n            // Create empty state\r\n            this._state = setPendingState({\r\n                value: '',\r\n            }, inline);\r\n            // Queue icon render\r\n            this._queueCheck();\r\n        }\r\n        /**\r\n         * Observed attributes\r\n         */\r\n        static get observedAttributes() {\r\n            return attributes.slice(0);\r\n        }\r\n        /**\r\n         * Observed properties that are different from attributes\r\n         *\r\n         * Experimental! Need to test with various frameworks that support it\r\n         */\r\n        /*\r\n        static get properties() {\r\n            return {\r\n                inline: {\r\n                    type: Boolean,\r\n                    reflect: true,\r\n                },\r\n                // Not listing other attributes because they are strings or combination\r\n                // of string and another type. Cannot have multiple types\r\n            };\r\n        }\r\n        */\r\n        /**\r\n         * Attribute has changed\r\n         */\r\n        attributeChangedCallback(name) {\r\n            if (name === 'inline') {\r\n                // Update immediately: not affected by other attributes\r\n                const newInline = getInline(this);\r\n                const state = this._state;\r\n                if (newInline !== state.inline) {\r\n                    // Update style if inline mode changed\r\n                    state.inline = newInline;\r\n                    updateStyle(this._shadowRoot, newInline);\r\n                }\r\n            }\r\n            else {\r\n                // Queue check for other attributes\r\n                this._queueCheck();\r\n            }\r\n        }\r\n        /**\r\n         * Get/set icon\r\n         */\r\n        get icon() {\r\n            const value = this.getAttribute('icon');\r\n            if (value && value.slice(0, 1) === '{') {\r\n                try {\r\n                    return JSON.parse(value);\r\n                }\r\n                catch (err) {\r\n                    //\r\n                }\r\n            }\r\n            return value;\r\n        }\r\n        set icon(value) {\r\n            if (typeof value === 'object') {\r\n                value = JSON.stringify(value);\r\n            }\r\n            this.setAttribute('icon', value);\r\n        }\r\n        /**\r\n         * Get/set inline\r\n         */\r\n        get inline() {\r\n            return getInline(this);\r\n        }\r\n        set inline(value) {\r\n            if (value) {\r\n                this.setAttribute('inline', 'true');\r\n            }\r\n            else {\r\n                this.removeAttribute('inline');\r\n            }\r\n        }\r\n        /**\r\n         * Restart animation\r\n         */\r\n        restartAnimation() {\r\n            const state = this._state;\r\n            if (state.rendered) {\r\n                const root = this._shadowRoot;\r\n                if (state.renderedMode === 'svg') {\r\n                    // Update root node\r\n                    try {\r\n                        root.lastChild.setCurrentTime(0);\r\n                        return;\r\n                    }\r\n                    catch (err) {\r\n                        // Failed: setCurrentTime() is not supported\r\n                    }\r\n                }\r\n                renderIcon(root, state);\r\n            }\r\n        }\r\n        /**\r\n         * Get status\r\n         */\r\n        get status() {\r\n            const state = this._state;\r\n            return state.rendered\r\n                ? 'rendered'\r\n                : state.icon.data === null\r\n                    ? 'failed'\r\n                    : 'loading';\r\n        }\r\n        /**\r\n         * Queue attributes re-check\r\n         */\r\n        _queueCheck() {\r\n            if (!this._checkQueued) {\r\n                this._checkQueued = true;\r\n                setTimeout(() => {\r\n                    this._check();\r\n                });\r\n            }\r\n        }\r\n        /**\r\n         * Check for changes\r\n         */\r\n        _check() {\r\n            if (!this._checkQueued) {\r\n                return;\r\n            }\r\n            this._checkQueued = false;\r\n            const state = this._state;\r\n            // Get icon\r\n            const newIcon = this.getAttribute('icon');\r\n            if (newIcon !== state.icon.value) {\r\n                this._iconChanged(newIcon);\r\n                return;\r\n            }\r\n            // Ignore other attributes if icon is not rendered\r\n            if (!state.rendered) {\r\n                return;\r\n            }\r\n            // Check for mode and attribute changes\r\n            const mode = this.getAttribute('mode');\r\n            const customisations = getCustomisations(this);\r\n            if (state.attrMode !== mode ||\r\n                haveCustomisationsChanged(state.customisations, customisations)) {\r\n                this._renderIcon(state.icon, customisations, mode);\r\n            }\r\n        }\r\n        /**\r\n         * Icon value has changed\r\n         */\r\n        _iconChanged(newValue) {\r\n            const icon = parseIconValue(newValue, (value, name, data) => {\r\n                // Asynchronous callback: re-check values to make sure stuff wasn't changed\r\n                const state = this._state;\r\n                if (state.rendered || this.getAttribute('icon') !== value) {\r\n                    // Icon data is already available or icon attribute was changed\r\n                    return;\r\n                }\r\n                // Change icon\r\n                const icon = {\r\n                    value,\r\n                    name,\r\n                    data,\r\n                };\r\n                if (icon.data) {\r\n                    // Render icon\r\n                    this._gotIconData(icon);\r\n                }\r\n                else {\r\n                    // Nothing to render: update icon in state\r\n                    state.icon = icon;\r\n                }\r\n            });\r\n            if (icon.data) {\r\n                // Icon is ready to render\r\n                this._gotIconData(icon);\r\n            }\r\n            else {\r\n                // Pending icon\r\n                this._state = setPendingState(icon, this._state.inline, this._state);\r\n            }\r\n        }\r\n        /**\r\n         * Got new icon data, icon is ready to (re)render\r\n         */\r\n        _gotIconData(icon) {\r\n            this._checkQueued = false;\r\n            this._renderIcon(icon, getCustomisations(this), this.getAttribute('mode'));\r\n        }\r\n        /**\r\n         * Re-render based on icon data\r\n         */\r\n        _renderIcon(icon, customisations, attrMode) {\r\n            // Get mode\r\n            const renderedMode = getRenderMode(icon.data.body, attrMode);\r\n            // Inline was not changed\r\n            const inline = this._state.inline;\r\n            // Set state and render\r\n            renderIcon(this._shadowRoot, (this._state = {\r\n                rendered: true,\r\n                icon,\r\n                inline,\r\n                customisations,\r\n                attrMode,\r\n                renderedMode,\r\n            }));\r\n        }\r\n    };\r\n    // Add getters and setters\r\n    attributes.forEach((attr) => {\r\n        if (!(attr in IconifyIcon.prototype)) {\r\n            Object.defineProperty(IconifyIcon.prototype, attr, {\r\n                get: function () {\r\n                    return this.getAttribute(attr);\r\n                },\r\n                set: function (value) {\r\n                    if (value !== null) {\r\n                        this.setAttribute(attr, value);\r\n                    }\r\n                    else {\r\n                        this.removeAttribute(attr);\r\n                    }\r\n                },\r\n            });\r\n        }\r\n    });\r\n    // Add exported functions: both as static and instance methods\r\n    const functions = exportFunctions();\r\n    for (const key in functions) {\r\n        IconifyIcon[key] = IconifyIcon.prototype[key] = functions[key];\r\n    }\r\n    // Define new component\r\n    customElements.define(name, IconifyIcon);\r\n    return IconifyIcon;\r\n}\r\n\r\n/**\r\n * Create exported data: either component instance or functions\r\n */\r\nconst IconifyIconComponent = defineIconifyIcon() || exportFunctions();\r\n/**\r\n * Export functions\r\n */\r\nconst { enableCache, disableCache, iconExists, getIcon, listIcons, addIcon, addCollection, calculateSize, buildIcon, loadIcons, loadIcon, addAPIProvider, _api, } = IconifyIconComponent;\r\n\r\nexport { IconifyIconComponent, _api, addAPIProvider, addCollection, addIcon, appendCustomStyle, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons };\r\n"],
  "mappings": "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",
  "names": ["storage", "simpleNames", "send", "data", "_window", "_api", "node", "name", "icon"]
}
